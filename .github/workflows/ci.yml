# .github/workflows/ci.yml

name: CI - 持续集成测试
on:
  pull_request: # 触发条件：当有 Pull Request 时
    branches:
      - dev     # 并且目标是 dev 分支时
jobs:
  test-and-lint:
    runs-on: ubuntu-latest # 在一台 Ubuntu (Linux) 虚拟机上运行
    
    # --- (补救方案二：注入 DagsHub Secrets) ---
    env:
      DAGSHUB_TRACKING_URI: ${{ secrets.DAGSHUB_TRACKING_URI }}
      DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
      DAGSHUB_PASSWORD: ${{ secrets.DAGSHUB_PASSWORD }}
    # --- (修复结束) ---

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置 Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: 安装依赖
        run: | # 3. 运行命令行，安装所有库
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # --- (补救方案三：安装 DVC) ---
          pip install dvc[azure]  # (我们用 DagsHub, 但包名无所谓)
          
      - name: 配置 DVC (使用 DagsHub 存储)
        # --- (补救方案三：修复版 v3) ---
        run: |
          # 1. (不变) *创建* 'origin' 遥控器
          dvc remote add origin https://dagshub.com/yamheng/mlops-house-price-project.dvc
          
          # 2. (不变) 设置遥控器凭证
          dvc remote modify origin --local auth basic
          dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME }}
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}
          
          # 3. (这是新修复！) 将 'origin' 设置为默认遥控器
          dvc remote default origin
          
      - name: DVC 拉取数据 (用于 Pytest)
        # --- (补救方案三：在测试前拉取数据) ---
        run: |
          # (不变) dvc pull 现在会自动使用默认的 'origin' 遥控器
          dvc pull data/housing.csv.dvc -f

      - name: 运行 Linting (Flake8)
        run: |
          flake8 . --count --show-source --statistics

      - name: 运行单元测试 (Pytest)
        run: |
          pytest

      - name: 获取数据 (用于训练)
        # (这步现在被 dvc pull 替代了，但保留也无妨)
        run: python ml/get_data.py

      - name: 运行模型训练 (推送到 DagsHub)
        run: python ml/train.py